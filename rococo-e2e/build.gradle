buildscript {
    ext {
        junitVersion = '5.10.2'
        allureVersion = '2.27.0'
        selenideVersion = '7.2.3'
        retrofitVersion = '2.11.0'
        okhttp3Version = '3.14.9'
        springJdbcVersion = '6.1.6'
    }
}

plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id 'io.qameta.allure-adapter' version '2.11.2'
}

allure {
    version.set("${allureVersion}")
    adapter {
        aspectjVersion.set("1.9.22")
        autoconfigure.set(true)
        aspectjWeaver.set(true)
    }
}

dependencies {
    // JUnit
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    // REST
    testImplementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    testImplementation "com.squareup.retrofit2:converter-jackson:${retrofitVersion}"
    testImplementation "com.squareup.okhttp3:okhttp-urlconnection:${okhttp3Version}"
    testImplementation "com.squareup.okhttp3:logging-interceptor:${okhttp3Version}"
    // Allure
    testImplementation("io.qameta.allure:allure-junit5:${allureVersion}") {
        exclude group: "org.junit.jupiter"
    }
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}") {
        exclude group: "com.codeborne"
    }
    // WEB
    testImplementation "com.codeborne:selenide:${selenideVersion}"
    // Utils
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'commons-io:commons-io:2.11.0'
    // Lombok
    testAnnotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"
    // DB
    testImplementation "org.springframework:spring-jdbc:${springJdbcVersion}"
    runtimeOnly "mysql:mysql-connector-java:${project.ext.mysqlDriverVersion}"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    options {
        systemProperties(System.getProperties())
    }
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    useJUnitPlatform()
}
